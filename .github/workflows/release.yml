name: Build and Publish Python Package

on:
  push:
    tags:
      - 'v*.*.*'  # 仅在推送符合 v*.*.* 格式的标签时触发，例如 v1.0.1

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ] #[ubuntu-latest, macos-latest, windows-latest]
        python-version: [ '3.9' ] #['3.9', '3.10', '3.11']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('my_rust_project/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('my_rust_project/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Run tests
        run: |
          pip install pytest
          pytest

      - name: Build wheels
        run: |
          maturin build --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: target/wheels/*.whl

  publish:
    needs: build-and-publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest ] #[ubuntu-latest, macos-latest, windows-latest]
        python-version: [ '3.9' ] #['3.9', '3.10', '3.11']
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: wheels

      - name: Install Twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI }}
        run: |
          twine upload wheels/**/*.whl
